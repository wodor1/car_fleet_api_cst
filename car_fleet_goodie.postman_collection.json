{
	"info": {
		"_postman_id": "4eb1bbac-27a5-4469-99a1-a71f67f97077",
		"name": "car_fleet_goodie",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26051985"
	},
	"item": [
		{
			"name": "car_fleet",
			"item": [
				{
					"name": "Create a new car",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test creating car with license plate\", function () {",
									"    var licensePlate = pm.variables.get('license_plate');",
									"    const response = pm.response.json();",
									"",
									"    if (response.hasOwnProperty(\"message\")) {",
									"        pm.expect(response.message).to.eql(`A car with plate '${licensePlate}' already exists.`);",
									"    } else {",
									"        pm.expect(response).to.have.property(\"license_plate\", licensePlate);",
									"        pm.expect(response).to.have.property(\"type\");",
									"        pm.expect(response).to.have.property(\"car_id\").to.be.a(\"number\");",
									"        pm.expect(response).to.have.property(\"driver\");",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"license_plate\": \"abc-124\",\r\n    \"type\": \"peugeot\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:5000/car/abc-124",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"car",
								"abc-124"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a single car",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Validate the response for getting a car', function () {",
									"    var licensePlate = pm.variables.get('license_plate');",
									"    var response = pm.response.json();",
									"    if (response.hasOwnProperty('license_plate')) {",
									"        pm.expect(response).to.have.property('license_plate', licensePlate); // Check if the license plate in the response matches the requested license plate",
									"        pm.expect(response).to.have.property('type'); // Check if the car type in the response is correct",
									"        pm.expect(response).to.have.property('car_id'); // Check if the car ID exists in the response",
									"        pm.expect(response).to.have.property('driver', null); // Check if the driver flag in the response is false",
									"    } else {",
									"        pm.expect(response).to.have.property('message', 'Car not found'); // Check if the message in the response matches the expected message",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTY4NjM4Nzg5MSwianRpIjoiNjU2MDY0OWQtOTBlYy00NzBjLTg3YjMtMDFmZGVkOTJjOWJkIiwidHlwZSI6ImFjY2VzcyIsInN1YiI6MywibmJmIjoxNjg2Mzg3ODkxLCJleHAiOjE2ODYzODk2OTF9.9iOg0eMAyVKkxiRPuTObdIVV1eXgNCTSe2YdiyiSWlc",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5000/car/abc-124",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"car",
								"abc-124"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Register endpoint response test\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (pm.response.code === 400) {",
									"        pm.expect(jsonData).to.have.property(\"message\", \"A user with that username already exists\");",
									"    } else if (pm.response.code === 201) {",
									"        pm.expect(jsonData).to.have.property(\"message\", \"User created successfully.\");",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"username\": \"GÃ©zuka\", \"password\": \"12345\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:5000/register",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authenticate user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Check /auth endpoint response', function() {",
									"    var jsonData = pm.response.json();",
									"",
									"    if (pm.response.code === 200) {",
									"        pm.expect(jsonData).to.have.property('access_token');",
									"        pm.globals.set(\"token\", jsonData.access_token);",
									"    } else if (pm.response.code === 401) {",
									"        pm.expect(jsonData).to.have.property('message', 'Wrong username or password');",
									"    } else {",
									"        pm.expect.fail('Unexpected response code');",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"username\": \"Zsolt\", \"password\": \"12345\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:5000/auth",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get current user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check response for /user endpoint\", function () {",
									"    var response = pm.response.json();",
									"    if (response.hasOwnProperty(\"user\")) {",
									"        pm.expect(response.user).to.have.property(\"name\");",
									"        pm.expect(response.user).to.have.property(\"id\");",
									"    } else if (response.hasOwnProperty(\"msg\")) {",
									"        pm.expect(response).to.have.property(\"msg\");",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTY4NjM5NjMyNywianRpIjoiYWIxZTE2ZTgtZGFkYS00MDI2LTllMjctZjhhNjg3MTE5Y2E3IiwidHlwZSI6ImFjY2VzcyIsInN1YiI6MywibmJmIjoxNjg2Mzk2MzI3LCJleHAiOjE2ODYzOTgxMjd9.agzasVBQ03jXTP0PYArhYWEu4wlGIKceVC_bxNKidsg",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:5000/user",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All cars",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTY4NjM5NjMyNywianRpIjoiYWIxZTE2ZTgtZGFkYS00MDI2LTllMjctZjhhNjg3MTE5Y2E3IiwidHlwZSI6ImFjY2VzcyIsInN1YiI6MywibmJmIjoxNjg2Mzk2MzI3LCJleHAiOjE2ODYzOTgxMjd9.agzasVBQ03jXTP0PYArhYWEu4wlGIKceVC_bxNKidsg",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:5000/cars",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"cars"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new driver",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Driver creation\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 400]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"Johnny Bravo\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:5000/driver",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"driver"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign driver to car",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validate the response for car driver assignment\", function () {",
									"    var response = pm.response.json();",
									"",
									"    if (response.message === \"Car already has a driver.\" ||",
									"        response.message === \"This car is already assigned to another driver\" ||",
									"        response.message === \"Driver does not exist\" ||",
									"        response.message === \"Car does not exist\" ||",
									"        response.message === \"This driver is already assigned to another car\") {",
									"        pm.expect(response).to.have.property(\"message\");",
									"    } else {",
									"        pm.expect(response.message).to.include('assigned');",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"driver_id\": 1, \"car_id\":1}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:5000/assign",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"assign"
							]
						}
					},
					"response": []
				},
				{
					"name": "Modify car",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Validate the response for getting a car', function () {",
									"    var licensePlate = pm.variables.get('license_plate');",
									"    var response = pm.response.json();",
									"    if (response.hasOwnProperty('license_plate')) {",
									"        pm.expect(response).to.have.property('license_plate', licensePlate); // Check if the license plate in the response matches the requested license plate",
									"        pm.expect(response).to.have.property('type', 'opel commondor'); // Check if the car type in the response is correct",
									"        pm.expect(response).to.have.property('car_id'); // Check if the car ID exists in the response",
									"        pm.expect(response).to.have.property('driver'); // Check if the driver flag in the response is false",
									"    } else {",
									"        pm.expect(response).to.have.property('message', 'Car not found'); // Check if the message in the response matches the expected message",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"type\": \"opel commondor\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:5000/car/abc-124",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"car",
								"abc-124"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new fleet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Fleet creation test\", function () {",
									"    var response = pm.response.json();",
									"    if (response.hasOwnProperty(\"name\")) {",
									"        pm.expect(pm.response.code).to.equal(201);",
									"        pm.expect(response).to.have.property(\"name\", pm.variables.get('new_fleet_name'));",
									"        pm.expect(response).to.have.property(\"cars\");",
									"    } else {",
									"        pm.expect(pm.response.code).to.equal(400);",
									"        pm.expect(response).to.have.property(\"message\", \"A fleet with name \" + pm.variables.get('new_fleet_name') + \" already exists.\");",
									"    }",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:5000/fleet/furgonok",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"fleet",
								"furgonok"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Fleets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all fleets endpoint test\", function () {",
									"    var response = pm.response.json();",
									"    pm.expect(response).to.have.property(\"fleets\").that.is.an(\"array\");",
									"    response.fleets.forEach(function(fleet) {",
									"        pm.expect(fleet).to.have.property(\"name\").that.is.a(\"string\");",
									"        pm.expect(fleet).to.have.property(\"id\").that.is.a(\"number\");",
									"        if (fleet.hasOwnProperty(\"cars\")) {",
									"            pm.expect(fleet.cars).to.be.an(\"array\");",
									"        }",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:5000/fleets",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"fleets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all drivers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all drivers\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property(\"drivers\");",
									"    pm.expect(jsonData.drivers).to.be.an(\"array\");",
									"    pm.expect(jsonData.drivers.length).to.be.at.least(0);",
									"",
									"    if (jsonData.drivers.length > 0) {",
									"        for (var i = 0; i < jsonData.drivers.length; i++) {",
									"            var driver = jsonData.drivers[i];",
									"            pm.expect(driver).to.have.property(\"name\");",
									"        }",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:5000/driver",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"driver"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign car to fleet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Add car to fleet test\", function () {",
									"    var responseCode = pm.response.code;",
									"    var responseBody = pm.response.json();",
									"",
									"    if (responseCode === 201) {",
									"        pm.expect(responseBody).to.deep.equal({",
									"            \"message\": \"Car assigned to fleet.\"",
									"        });",
									"    } else if (responseCode === 400) {",
									"        pm.expect(responseBody).to.deep.equal({",
									"            \"message\": \"Car already assigned to fleet.\"",
									"        });",
									"    } else if (responseCode === 404 && responseBody.message === \"Car not found.\") {",
									"        pm.expect(responseBody).to.deep.equal({",
									"            \"message\": \"Car not found.\"",
									"        });",
									"    } else if (responseCode === 404 && responseBody.message === \"Car not found.\") {",
									"        pm.expect(responseBody).to.deep.equal({",
									"            \"message\": \"Fleet not found.\"",
									"        });",
									"    } else {",
									"        pm.expect.fail(\"Unexpected response: \" + responseCode + \" \" + responseBody);",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"car_id\": 1,\r\n    \"fleet_id\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:5000/car_fleet",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"car_fleet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a car",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check delete car response\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (pm.response.code === 200) {",
									"        pm.expect(jsonData.message).to.eql(\"Car deleted\");",
									"    } else if (pm.response.code === 404) {",
									"        pm.expect(jsonData.message).to.eql(\"Car not found.\");",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:5000/car/abc-123",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"car",
								"abc-123"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "license_plate",
			"value": "abc-124",
			"type": "string"
		},
		{
			"key": "new_fleet_name",
			"value": "furgonok",
			"type": "string"
		}
	]
}